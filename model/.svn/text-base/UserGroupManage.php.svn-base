<?php
/**
 * @author rose <qiuyang03@baidu.com>
 */
class UserGroupManage {
	private $table = 'data_user_group';
	private $user_groupdao;
	function __construct(){
		$this->user_groupdao =  new BaseDao($this->table);
	}
	function insert(){
		$name = Util::req('name');
		$group_id = Util::req('group_code');
		$this->user_groupdao->setFilteValue('name', $name);
		$this->user_groupdao->setFilteValue('group_code', $group_id);
		$this->user_groupdao->insert();
	}
	
	function update(){
		$id = Util::req('id', 'sql');
		$name = Util::req('name', 'sql');
		$group_code = Util::req('group_code', 'sql');
		
		$this->user_groupdao->setFilteValue('name', $name);
		$this->user_groupdao->setFilteValue("group_code" ,$group_code);
		$this->user_groupdao->setConditionFV('id', $id);
		$this->user_groupdao->update();
	}
	
	function delete(){
		$id = Util::req('id');
		if ($id == -1){
			echo '<script>alert("超级管理员组不能删除")</script>';
			return;
		}
		$this->user_groupdao->cleanConditionFV();
		$this->user_groupdao->setConditionFV('id', $id);
		$this->user_groupdao->delete();
	}
	
	/**
	 * 分页获取列表 拥有强大的高级查询为一体
	 * @return
	 */
	function getList(){
		$page_size = Util::req('page_size');
		$page_num = Util::req('page_num');
		$name = Util::req('name');
		$state = Util::req('state');
		$start_time = Util::req('start_time');
		$end_time = Util::req('end_time');
		
		$this->user_groupdao->setColumns('id');
		$this->user_groupdao->setColumns('name');
		$this->user_groupdao->setOrderBy('id', 'asc');
		$page = new Page($page_size, $page_num);
		//封装查询条件
		if ($name) {
			$this->user_groupdao->setConditionFV('name', $name, 'like');
			$page->setSearchKV('name', $name);
		} 
		$this->user_groupdao->setPage($page);
		$results =  $this->user_groupdao->getList();
		return $results;
	}
	
	function get(){
		$id = Util::req("id", "sql");
		$this->user_groupdao->setId($id);
		$rst = $this->user_groupdao->get();
		return $rst;
	}
	
	function getAllList(){
		$this->user_groupdao->setColumns('id');
		$this->user_groupdao->setColumns('name');
		$this->user_groupdao->setColumns('group_code');
		$this->user_groupdao->setOrderBy('id', 'asc');
		$results =  $this->user_groupdao->getListNoPage();
		return $results;
		
	}
	
	/**
	 * 设定用户组权限
	 * 数据结构array(
	 * array(1, array(2,3,4,5)),
	 * array(6, array(6,8,9,10))
	 * )
	 */
	function set_rule(){
		$id = Util::req("id");
		//查找所有主菜单
		$sql = "select id from data_menu where parent_id = -1";
		$result = $this->user_groupdao->query($sql);
		$ruleInfo = array();
		while ($obj = mysql_fetch_assoc($result)) {
			$root_menu = $obj['id'];
			$sub_menus = Util::reqArr("sub_menu".$root_menu, 'sql');
			if (!isset($sub_menus)) continue;
			$sub_menu_array = array();
			foreach ($sub_menus as $sub_menu){
				$sub_menu_array[] = $sub_menu;
			}
			$ruleInfo[] = array($root_menu, $sub_menu_array);
		}
		$this->user_groupdao->setFilteValue('rule_info', serialize($ruleInfo));
		$this->user_groupdao->setConditionFV('id', $id);
		$this->user_groupdao->update();
	}
	
	/**
	 * 根据用户组id获取用户组权限
	 * @param 用户组id
	 * @return @return array(
	 * array(1,2,3),//主菜单
	 * array(5,12,11)//子菜单
	 * ) 
	 */
	function get_rule($id){
		$this->user_groupdao->setId($id);
		$this->user_groupdao->setColumns('rule_info');
		$rst = $this->user_groupdao->getColumnsById();
		
		$rule_info = $rst['rule_info'];
		$rule_info = unserialize($rule_info.'');
		if (!$rule_info) return '';
		$result_data_sub = array();
		$result_data_root = array();
		foreach ($rule_info as $obj){
			$result_data_sub = array_merge($result_data_sub, $obj[1]);
			$result_data_root[] = $obj[0];
		}
		return array($result_data_root, $result_data_sub);
		
	}
}